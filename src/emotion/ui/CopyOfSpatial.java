/* - Spatial full -
 * This example simply displays the spatial info if it is attached and displays the acceleration data
 * for each axis as it is changing in pretty much raw form.  It also allows for modifying the sensitivity of
 * each axis that is availabl on the attached spatial.

 * Please note that this example was designed to work with only one Phidget Spatial connected.
 *
 * Copyright 2011 Phidgets Inc.
 * This work is licensed under the Creative Commons Attribution 2.5 Canada License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by/2.5/ca/
 */
package emotion.ui;

import accelerometer.listeners.*;

import com.phidgets.SpatialPhidget;
import com.phidgets.PhidgetException;

import accelerometer.graphics.CompassBearingGraphPanel;
import accelerometer.graphics.GyroGraphPanel;
import accelerometer.graphics.MagFieldGraphPanel;
import accelerometer.graphics.MotionGraphPanel;

import java.awt.Dimension;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;

public class CopyOfSpatial extends ApplicationFrame {
	private static final long serialVersionUID = 1L;
    private SpatialPhidget spatial;
    private SpatialAttachListener attach_listener;
    private SpatialDetachListener detach_listener;
    private SpatialErrorListener error_listener;
    private SpatialSpatialDataListener spatialData_listener;
    private MotionGraphPanel graphPanel;
    private MagFieldGraphPanel magFieldGraphPanel;
    private GyroGraphPanel gyroGraphPanel;
    private CompassBearingGraphPanel compassBearingGraphPanel;
    private Double[] gyroHeading = {0.0, 0.0, 0.0}; //degrees
    private Double lastTime;
    private ArrayList<Double[]> compassBearingFilter = new ArrayList<Double[]>();
    private BarChartPanel barChartpanel;
    
    /** Creates new form Spatial */
    public CopyOfSpatial(String s) {
    	super(s);
    	initComponents();
        Dimension screenSize = java.awt.Toolkit.getDefaultToolkit()
				.getScreenSize();
		setSize((int) (screenSize.getWidth() / 1.2),
				(int) (screenSize.getHeight() / 1.2));
		setVisible(true);
		setLayout(null);
		setResizable(false);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		barChartpanel = new BarChartPanel();
        JPanel chartpanel = barChartpanel.createDemoPanel();
        barChartpanel.setTitle("活動量");
        barChartpanel.setRange(1000);
        barChartpanel.setValueVisible(true);
        barChartpanel.setTickLabelsVisible(false);
        chartpanel.setPreferredSize(new Dimension(350, 270));
        chartpanel.setBounds((int)(getWidth() / 1.4), getHeight() / 15, 350, 270);
        add(chartpanel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        attachedTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextArea();
        serialTxt = new javax.swing.JTextField();
        versionTxt = new javax.swing.JTextField();
        numAccelAxesTxt = new javax.swing.JTextField();
        numGyroAxesTxt = new javax.swing.JTextField();
        numCompassAxesTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        dataRateScrl = new javax.swing.JSlider();
        dataRateTxt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        accelXTxt = new javax.swing.JTextField();
        accelYTxt = new javax.swing.JTextField();
        accelZTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        gyroXTxt = new javax.swing.JTextField();
        gyroYTxt = new javax.swing.JTextField();
        gyroZTxt = new javax.swing.JTextField();
        zeroGyroBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        gyroXTxt1 = new javax.swing.JTextField();
        gyroYTxt1 = new javax.swing.JTextField();
        gyroZTxt1 = new javax.swing.JTextField();
        pitchAngleTxt = new javax.swing.JTextField();
        rollAngleTxt = new javax.swing.JTextField();
        bearingTxt = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
//        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dataRateScrl.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dataRateScrlStateChanged(evt);
            }
        });
        graphPanel = new MotionGraphPanel();
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            spatial = new SpatialPhidget();
            gyroHeading[0] = 0.0;
            gyroHeading[1] = 0.0;
            gyroHeading[2] = 0.0;
            lastTime = 0.0;

            attach_listener = new SpatialAttachListener(this, this.jPanel2, this.jPanel3,
                    this.jPanel4, this.jPanel5, this.attachedTxt, this.nameTxt,
                    this.serialTxt, this.versionTxt, this.numAccelAxesTxt, this.numGyroAxesTxt,
                    this.numCompassAxesTxt, this.dataRateScrl, this.dataRateTxt,
                    this.accelXTxt, this.accelYTxt, this.accelZTxt, this.gyroXTxt, this.gyroYTxt, this.gyroZTxt,
                    this.zeroGyroBtn, this.gyroXTxt1, this.gyroYTxt1, this.gyroZTxt1,
                    this.pitchAngleTxt, this.rollAngleTxt, this.bearingTxt, this.gyroHeading, this.lastTime, this.graphPanel, this.magFieldGraphPanel,
                    this.gyroGraphPanel, this.compassBearingGraphPanel);
            detach_listener = new SpatialDetachListener(this, this.attachedTxt, this.nameTxt,
                    this.serialTxt, this.versionTxt, this.numAccelAxesTxt, this.numGyroAxesTxt,
                    this.numCompassAxesTxt, this.dataRateScrl, this.dataRateTxt,
                    this.accelXTxt, this.accelYTxt, this.accelZTxt, this.gyroXTxt, this.gyroYTxt, this.gyroZTxt,
                    this.zeroGyroBtn, this.gyroXTxt1, this.gyroYTxt1, this.gyroZTxt1,
                    this.pitchAngleTxt, this.rollAngleTxt, this.bearingTxt, this.gyroHeading, this.lastTime,
                    this.graphPanel, this.magFieldGraphPanel, this.gyroGraphPanel, this.compassBearingGraphPanel);
            error_listener = new SpatialErrorListener(this);
            spatialData_listener = new SpatialSpatialDataListener(this.accelXTxt, this.accelYTxt, this.accelZTxt,
                    this.gyroXTxt, this.gyroYTxt, this.gyroZTxt, this.gyroXTxt1, this.gyroYTxt1, this.gyroZTxt1,
                    this.gyroHeading, this.lastTime, this.pitchAngleTxt, this.rollAngleTxt, this.bearingTxt,
                    this.compassBearingFilter, this.graphPanel, this.magFieldGraphPanel, this.gyroGraphPanel,
                    this.compassBearingGraphPanel, this.barChartpanel);

            spatial.addAttachListener(attach_listener);
            spatial.addDetachListener(detach_listener);
            spatial.addErrorListener(error_listener);
            spatial.addSpatialDataListener(spatialData_listener);
            
            spatial.openAny();
        } catch (PhidgetException ex) {
            JOptionPane.showMessageDialog(this, ex.getDescription(), "Phidget Error" + ex.getErrorNumber(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            spatial.removeSpatialDataListener(spatialData_listener);
            spatial.removeErrorListener(error_listener);
            spatial.removeDetachListener(detach_listener);
            spatial.removeAttachListener(attach_listener);

            spatial.close();
            spatial = null;

            dispose();
            System.exit(0);
        } catch (PhidgetException ex) {
            JOptionPane.showMessageDialog(this, ex.getDescription(), "Phidget Error" + ex.getErrorNumber(), JOptionPane.ERROR_MESSAGE);
            dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosed

    private void dataRateScrlStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dataRateScrlStateChanged
        if (dataRateScrl.isEnabled()) {
            try {
                spatial.setDataRate(dataRateScrl.getValue());
                dataRateTxt.setText(Integer.toString(dataRateScrl.getValue()));
            } catch (PhidgetException ex) {
                //Throws an exception if setting a data rate that is not a multiple of 8, or outside the range 4-1000
            }
        }
    }//GEN-LAST:event_dataRateScrlStateChanged
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RefineryUtilities.centerFrameOnScreen(new CopyOfSpatial("情緒"));
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accelXTxt;
    private javax.swing.JTextField accelYTxt;
    private javax.swing.JTextField accelZTxt;
    private javax.swing.JTextField attachedTxt;
    private javax.swing.JTextField bearingTxt;
    private javax.swing.JSlider dataRateScrl;
    private javax.swing.JTextField dataRateTxt;
    private javax.swing.JTextField gyroXTxt;
    private javax.swing.JTextField gyroXTxt1;
    private javax.swing.JTextField gyroYTxt;
    private javax.swing.JTextField gyroYTxt1;
    private javax.swing.JTextField gyroZTxt;
    private javax.swing.JTextField gyroZTxt1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextArea nameTxt;
    private javax.swing.JTextField numAccelAxesTxt;
    private javax.swing.JTextField numCompassAxesTxt;
    private javax.swing.JTextField numGyroAxesTxt;
    private javax.swing.JTextField pitchAngleTxt;
    private javax.swing.JTextField rollAngleTxt;
    private javax.swing.JTextField serialTxt;
    private javax.swing.JTextField versionTxt;
    private javax.swing.JButton zeroGyroBtn;
    // End of variables declaration//GEN-END:variables
}
